(require 'nastimer.core)
(nastimer.core/scan "/Volumes/KILL_BILL_VOL2")
(def dvd (nastimer.core/scan "/Volumes/KILL_BILL_VOL2"))
(count dvd)
(def mynas (nastimer.core/scan "/Volumes/family"))
(time (count mynas))
(/ 1446 60)
(/ 1446.0 60)
(time (count mynas))
(nastimer.core/save-nasfiles mynas "myfilelist.txt")
(nastimer.core/save-nasfiles mynas "myfilelist-deleteme.txt")
(doc assoc)
(:name (first mynas))
(first mynas)
(:path (first mynas))
(class mynas)
(seq? mynas)
(require 'nastimer.core)
(def dvd (nastimer.core/scan "/Volumes/KILL_BILL_VOL2"))
(first dvd)
(dev mynas [])
(def mynas [])
(def mynas (nastimer.core/scan "/Volumes/family"))
(require 'nastimer.core)
(java.util.Date.)
(def begin (java.util.Date.))
(def end (java.util.Date.))
(- end begin)
(.getTime end)
(- (.getTime end) (.getTime begin))
(require 'nastimer.core)
(def mynas (nastimer.core/scan "/Volumes/family"))
(first mynas)
(take 10 mynas)
(def mynasvec (into [] mynas))
(nastimer.core/save-nasfiles mynas "myfilelist.txt")
(time (count mynas))
(def mynasvec nil)
(time (count mynas))
(nastimer.core/save-nasfiles mynas "myfilelist-deleteme.txt")
(count mynas)
(first mynas)
(second mynas)
(third mynas)
(take 10 mynas)
(map :scanduration mynas)
(count (filter #( < 1 (:scanduration %)) mynas))
(def suspicious (filter #( < 1 (:scanduration %)) mynas))
(take 10 suspicious)
(map :scanduration suspicious)
